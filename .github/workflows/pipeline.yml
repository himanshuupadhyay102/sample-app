name: Scala CI              #We are using default scala workflow provided by GithubActions.
env:
  AWS_REGION_NAME           : "us-east-2"
on:
  push:
    branches: 
      - master
  pull_request:
    branches: 
      - master

jobs:
  build:

      runs-on: ubuntu-latest

      steps:
      - name: Git Chekout
        uses: actions/checkout@v2
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Compile step
        run: sbt clean compile
  test:
      runs-on: ubuntu-latest
      needs: 
        - build
      steps:
      - name: Run tests 
        run: sbt test

  package:
      runs-on: ubuntu-18.04
      needs:
        - test
        - sonarcloud
      steps:
        - name: Git Chekout
          uses: actions/checkout@v2
        - name: Generate jar
          run: sbt package
        - name: Generate Dist
          run: sbt dist
        - name: Make Directory
          run: mkdir -p codedeploy
        - name: Copy JAR Artifacts To Codedeploy
          run: cp /home/runner/work/sample-app/sample-app/target/scala-2.12/sbt-scoverage-samples_2.12-1.5.1.jar codedeploy/scala-project-1.0.jar
        - name: Copy Zip Artifacts To Codedeploy
          run: cp /home/runner/work/sample-app/sample-app/target/universal/sbt-scoverage-samples-1.5.1.zip codedeploy/scala-project-1.0.zip
        - name: Configure my AWS Credentils
          uses: aws-actions/configure-aws-credentials@v1
          with:
             aws-access-key-id    : ${{ secrets.MY_AWS_ACCESS_KEY }}
             aws-secret-access-key: ${{ secrets.MY_AWS_SECRET_KEY }}
             aws-region           : ${{ env.AWS_REGION_NAME }}

        - name: Copy our ZIP package to S3 bucket
          run : aws s3 cp codedeploy/scala-project-1.0.zip s3://github-actions10/codedeploy.zip
        - name: Copy our JAR package to S3 bucket
          run : aws s3 cp codedeploy/scala-project-1.0.jar s3://github-actions10/codedeploy.jar
  sonarcloud:
    name: SonarCloud
    runs-on: ubuntu-latest
    needs: 
      - build
    steps:
      - name: Git Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
